AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: zoph.io - subnet-watcher - https://zoph.io - January 2023
###########################################################
Parameters:
  ###########################################################
  pEnv:
    Type: String
  pAWSRegion:
    Type: String
  pProjectName:
    Type: String
  pProductName:
    Type: String
  pDescription:
    Type: String
  pAlertsRecipient:
    Type: String
  pPercentageRemainingWarning:
    Type: String

###########################################################
Resources:
  ###########################################################
  Function:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub ${pProjectName}-${pProductName}-${pEnv}
      Description: !Ref pDescription
      Handler: handlers.main
      Runtime: python3.9
      CodeUri: ./python/
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: cron(*/5 * * * ? *)
      MemorySize: 256
      Timeout: 300
      Environment:
        Variables:
          VPC_ID: ""
          REGION_ID: !Ref pAWSRegion
          PERCENTAGE_REMAINING_WARNING: !Ref pPercentageRemainingWarning
          SNS_TOPIC_ARN: !Ref AlertingTopic
          MESSAGE_SUBJECT: !Sub "[${pProductName}-${pEnv}] Subnets are running out of ip addresses!"
          ENVIRONMENT: !Ref pEnv
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribeSubnets
                - ec2:DescribeVpcs
                - ec2:DescribeVpcAttribute
                - ec2:DescribeRegions
                - cloudwatch:PutMetricData
              Resource: "*"
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref AlertingTopic
      Tags:
        Project: !Ref pProjectName
        Product: !Ref pProductName
        Environment: !Ref pEnv

  LambdaFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${pProjectName}-${pProductName}-${pEnv}"
      RetentionInDays: 30

  CloudWatchLogsMetricsFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "ERROR"
      LogGroupName: !Sub "/aws/lambda/${pProjectName}-${pProductName}-${pEnv}"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${pProjectName}-${pProductName}-${pEnv}
          MetricName: "ERROR"
          DefaultValue: 0
    DependsOn: LambdaFunctionLogGroup

  CwErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AlertingTopic
      AlarmDescription: !Sub "[${pProductName}] Alarm for ERROR on ${pProjectName}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: ERROR
      Namespace: !Sub ${pProjectName}-${pProductName}-${pEnv}
      OKActions:
        - !Ref AlertingTopic
      Period: 10
      Statistic: Sum
      Threshold: 1
      TreatMissingData: ignore

  AlertingTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: !Sub "[${pProductName}-${pEnv}] Alarm for ${pProjectName}"
      Subscription:
        - Protocol: email
          Endpoint: !Ref pAlertsRecipient
